# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright Â© 2000-2018 World Wide Web Consortium
# See http://www.w3.org/Consortium/Legal/copyright-software
#
# Author: Bert Bos <bert@w3.org>
# Created: 31 Mar 2000



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = hxaddid$(EXEEXT) hxcite$(EXEEXT) hxcount$(EXEEXT) \
	hxextract$(EXEEXT) hxclean$(EXEEXT) hxcopy$(EXEEXT) \
	hxprune$(EXEEXT) hxnsxml$(EXEEXT) hxprintlinks$(EXEEXT) \
	hxincl$(EXEEXT) hxindex$(EXEEXT) hxmkbib$(EXEEXT) \
	hxmultitoc$(EXEEXT) hxname2id$(EXEEXT) hxnormalize$(EXEEXT) \
	hxnum$(EXEEXT) hxpipe$(EXEEXT) hxremove$(EXEEXT) \
	hxselect$(EXEEXT) hxtabletrans$(EXEEXT) hxtoc$(EXEEXT) \
	hxuncdata$(EXEEXT) hxunent$(EXEEXT) hxunpipe$(EXEEXT) \
	hxunxmlns$(EXEEXT) hxwls$(EXEEXT) hxxmlns$(EXEEXT) \
	hxref$(EXEEXT) xml2asc$(EXEEXT) asc2xml$(EXEEXT)
noinst_PROGRAMS = cexport$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/flex-optimize.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libidn.m4 \
	$(top_srcdir)/m4/libidn2.m4 $(top_srcdir)/m4/optreset.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_asc2xml_OBJECTS = asc2xml.$(OBJEXT)
asc2xml_OBJECTS = $(am_asc2xml_OBJECTS)
asc2xml_LDADD = $(LDADD)
asc2xml_DEPENDENCIES = @LIBOBJS@
am_cexport_OBJECTS = cexport.$(OBJEXT)
cexport_OBJECTS = $(am_cexport_OBJECTS)
cexport_LDADD = $(LDADD)
cexport_DEPENDENCIES = @LIBOBJS@
am_hxaddid_OBJECTS = hxaddid.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	dtd.$(OBJEXT) openurl.$(OBJEXT) errexit.$(OBJEXT) \
	url.$(OBJEXT) connectsock.$(OBJEXT) heap.$(OBJEXT) \
	tree.$(OBJEXT) types.$(OBJEXT) genid.$(OBJEXT) class.$(OBJEXT) \
	hash.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	fopencookie.$(OBJEXT)
hxaddid_OBJECTS = $(am_hxaddid_OBJECTS)
hxaddid_LDADD = $(LDADD)
hxaddid_DEPENDENCIES = @LIBOBJS@
am_hxcite_OBJECTS = heap.$(OBJEXT) errexit.$(OBJEXT) hxcite.$(OBJEXT)
hxcite_OBJECTS = $(am_hxcite_OBJECTS)
hxcite_LDADD = $(LDADD)
hxcite_DEPENDENCIES = @LIBOBJS@
am_hxclean_OBJECTS = hxclean.$(OBJEXT) html.$(OBJEXT) tree.$(OBJEXT) \
	types.$(OBJEXT) heap.$(OBJEXT) dtd.$(OBJEXT) scan.$(OBJEXT) \
	errexit.$(OBJEXT)
hxclean_OBJECTS = $(am_hxclean_OBJECTS)
hxclean_LDADD = $(LDADD)
hxclean_DEPENDENCIES = @LIBOBJS@
am_hxcopy_OBJECTS = html.$(OBJEXT) scan.$(OBJEXT) types.$(OBJEXT) \
	url.$(OBJEXT) openurl.$(OBJEXT) errexit.$(OBJEXT) \
	dict.$(OBJEXT) headers.$(OBJEXT) heap.$(OBJEXT) \
	connectsock.$(OBJEXT) hxcopy.$(OBJEXT) fopencookie.$(OBJEXT)
hxcopy_OBJECTS = $(am_hxcopy_OBJECTS)
hxcopy_LDADD = $(LDADD)
hxcopy_DEPENDENCIES = @LIBOBJS@
am_hxcount_OBJECTS = hxcount.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	types.$(OBJEXT) errexit.$(OBJEXT) heap.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) connectsock.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxcount_OBJECTS = $(am_hxcount_OBJECTS)
hxcount_LDADD = $(LDADD)
hxcount_DEPENDENCIES = @LIBOBJS@
am_hxextract_OBJECTS = hxextract.$(OBJEXT) html.$(OBJEXT) \
	scan.$(OBJEXT) openurl.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) heap.$(OBJEXT) errexit.$(OBJEXT) \
	class.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	types.$(OBJEXT) fopencookie.$(OBJEXT)
hxextract_OBJECTS = $(am_hxextract_OBJECTS)
hxextract_LDADD = $(LDADD)
hxextract_DEPENDENCIES = @LIBOBJS@
am_hxincl_OBJECTS = hxincl.$(OBJEXT) scan.$(OBJEXT) html.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) heap.$(OBJEXT) \
	errexit.$(OBJEXT) connectsock.$(OBJEXT) types.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxincl_OBJECTS = $(am_hxincl_OBJECTS)
hxincl_LDADD = $(LDADD)
hxincl_DEPENDENCIES = @LIBOBJS@
am_hxindex_OBJECTS = hxindex.$(OBJEXT) scan.$(OBJEXT) html.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) heap.$(OBJEXT) class.$(OBJEXT) \
	errexit.$(OBJEXT) connectsock.$(OBJEXT) types.$(OBJEXT) \
	tree.$(OBJEXT) genid.$(OBJEXT) dtd.$(OBJEXT) headers.$(OBJEXT) \
	dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxindex_OBJECTS = $(am_hxindex_OBJECTS)
hxindex_LDADD = $(LDADD)
hxindex_DEPENDENCIES = @LIBOBJS@
am_hxmkbib_OBJECTS = errexit.$(OBJEXT) heap.$(OBJEXT) \
	hxmkbib.$(OBJEXT) hash.$(OBJEXT)
hxmkbib_OBJECTS = $(am_hxmkbib_OBJECTS)
hxmkbib_LDADD = $(LDADD)
hxmkbib_DEPENDENCIES = @LIBOBJS@
am_hxmultitoc_OBJECTS = hxmultitoc.$(OBJEXT) html.$(OBJEXT) \
	scan.$(OBJEXT) openurl.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) heap.$(OBJEXT) errexit.$(OBJEXT) \
	class.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	types.$(OBJEXT) fopencookie.$(OBJEXT)
hxmultitoc_OBJECTS = $(am_hxmultitoc_OBJECTS)
hxmultitoc_LDADD = $(LDADD)
hxmultitoc_DEPENDENCIES = @LIBOBJS@
am_hxname2id_OBJECTS = html.$(OBJEXT) scan.$(OBJEXT) dtd.$(OBJEXT) \
	openurl.$(OBJEXT) errexit.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) heap.$(OBJEXT) tree.$(OBJEXT) \
	types.$(OBJEXT) hxname2id.$(OBJEXT) headers.$(OBJEXT) \
	dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxname2id_OBJECTS = $(am_hxname2id_OBJECTS)
hxname2id_LDADD = $(LDADD)
hxname2id_DEPENDENCIES = @LIBOBJS@
am_hxnormalize_OBJECTS = hxnormalize.$(OBJEXT) html.$(OBJEXT) \
	scan.$(OBJEXT) openurl.$(OBJEXT) url.$(OBJEXT) tree.$(OBJEXT) \
	connectsock.$(OBJEXT) heap.$(OBJEXT) dtd.$(OBJEXT) \
	types.$(OBJEXT) langinfo.$(OBJEXT) textwrap.$(OBJEXT) \
	errexit.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	fopencookie.$(OBJEXT)
hxnormalize_OBJECTS = $(am_hxnormalize_OBJECTS)
hxnormalize_LDADD = $(LDADD)
hxnormalize_DEPENDENCIES = @LIBOBJS@
am_hxnsxml_OBJECTS = hxnsxml.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	types.$(OBJEXT) errexit.$(OBJEXT) heap.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) connectsock.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxnsxml_OBJECTS = $(am_hxnsxml_OBJECTS)
hxnsxml_LDADD = $(LDADD)
hxnsxml_DEPENDENCIES = @LIBOBJS@
am_hxnum_OBJECTS = hxnum.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) errexit.$(OBJEXT) \
	heap.$(OBJEXT) connectsock.$(OBJEXT) headers.$(OBJEXT) \
	dict.$(OBJEXT) types.$(OBJEXT) class.$(OBJEXT) \
	fopencookie.$(OBJEXT)
hxnum_OBJECTS = $(am_hxnum_OBJECTS)
hxnum_LDADD = $(LDADD)
hxnum_DEPENDENCIES = @LIBOBJS@
am_hxpipe_OBJECTS = hxpipe.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	types.$(OBJEXT) errexit.$(OBJEXT) heap.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) connectsock.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxpipe_OBJECTS = $(am_hxpipe_OBJECTS)
hxpipe_LDADD = $(LDADD)
hxpipe_DEPENDENCIES = @LIBOBJS@
am_hxprintlinks_OBJECTS = hxprintlinks.$(OBJEXT) openurl.$(OBJEXT) \
	headers.$(OBJEXT) types.$(OBJEXT) heap.$(OBJEXT) \
	errexit.$(OBJEXT) dict.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	url.$(OBJEXT) connectsock.$(OBJEXT) fopencookie.$(OBJEXT)
hxprintlinks_OBJECTS = $(am_hxprintlinks_OBJECTS)
hxprintlinks_LDADD = $(LDADD)
hxprintlinks_DEPENDENCIES = @LIBOBJS@
am_hxprune_OBJECTS = hxprune.$(OBJEXT) tree.$(OBJEXT) scan.$(OBJEXT) \
	html.$(OBJEXT) errexit.$(OBJEXT) dtd.$(OBJEXT) heap.$(OBJEXT) \
	types.$(OBJEXT) openurl.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) class.$(OBJEXT) headers.$(OBJEXT) \
	dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxprune_OBJECTS = $(am_hxprune_OBJECTS)
hxprune_LDADD = $(LDADD)
hxprune_DEPENDENCIES = @LIBOBJS@
am_hxref_OBJECTS = html.$(OBJEXT) scan.$(OBJEXT) dtd.$(OBJEXT) \
	openurl.$(OBJEXT) errexit.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) heap.$(OBJEXT) tree.$(OBJEXT) \
	types.$(OBJEXT) genid.$(OBJEXT) hxref.$(OBJEXT) hash.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxref_OBJECTS = $(am_hxref_OBJECTS)
hxref_LDADD = $(LDADD)
hxref_DEPENDENCIES = @LIBOBJS@
am_hxremove_OBJECTS = hxremove.$(OBJEXT) types.$(OBJEXT) \
	errexit.$(OBJEXT) heap.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	tree.$(OBJEXT) selector.$(OBJEXT) dtd.$(OBJEXT) \
	selmatch.$(OBJEXT)
hxremove_OBJECTS = $(am_hxremove_OBJECTS)
hxremove_LDADD = $(LDADD)
hxremove_DEPENDENCIES = @LIBOBJS@
am_hxselect_OBJECTS = hxselect.$(OBJEXT) types.$(OBJEXT) \
	errexit.$(OBJEXT) heap.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	tree.$(OBJEXT) selector.$(OBJEXT) dtd.$(OBJEXT) \
	selmatch.$(OBJEXT)
hxselect_OBJECTS = $(am_hxselect_OBJECTS)
hxselect_LDADD = $(LDADD)
hxselect_DEPENDENCIES = @LIBOBJS@
am_hxtabletrans_OBJECTS = hxtabletrans.$(OBJEXT) scan.$(OBJEXT) \
	tree.$(OBJEXT) heap.$(OBJEXT) openurl.$(OBJEXT) html.$(OBJEXT) \
	errexit.$(OBJEXT) dtd.$(OBJEXT) types.$(OBJEXT) dict.$(OBJEXT) \
	connectsock.$(OBJEXT) headers.$(OBJEXT) url.$(OBJEXT) \
	fopencookie.$(OBJEXT)
hxtabletrans_OBJECTS = $(am_hxtabletrans_OBJECTS)
hxtabletrans_LDADD = $(LDADD)
hxtabletrans_DEPENDENCIES = @LIBOBJS@
am_hxtoc_OBJECTS = html.$(OBJEXT) scan.$(OBJEXT) dtd.$(OBJEXT) \
	openurl.$(OBJEXT) errexit.$(OBJEXT) url.$(OBJEXT) \
	class.$(OBJEXT) connectsock.$(OBJEXT) heap.$(OBJEXT) \
	tree.$(OBJEXT) types.$(OBJEXT) genid.$(OBJEXT) hxtoc.$(OBJEXT) \
	hash.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	fopencookie.$(OBJEXT)
hxtoc_OBJECTS = $(am_hxtoc_OBJECTS)
hxtoc_LDADD = $(LDADD)
hxtoc_DEPENDENCIES = @LIBOBJS@
am_hxuncdata_OBJECTS = hxuncdata.$(OBJEXT)
hxuncdata_OBJECTS = $(am_hxuncdata_OBJECTS)
hxuncdata_LDADD = $(LDADD)
hxuncdata_DEPENDENCIES = @LIBOBJS@
am_hxunent_OBJECTS = unent.$(OBJEXT) hxunentmain.$(OBJEXT)
hxunent_OBJECTS = $(am_hxunent_OBJECTS)
hxunent_LDADD = $(LDADD)
hxunent_DEPENDENCIES = @LIBOBJS@
am_hxunpipe_OBJECTS = hxunpipe.$(OBJEXT) heap.$(OBJEXT) \
	errexit.$(OBJEXT) openurl.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	types.$(OBJEXT) fopencookie.$(OBJEXT)
hxunpipe_OBJECTS = $(am_hxunpipe_OBJECTS)
hxunpipe_LDADD = $(LDADD)
hxunpipe_DEPENDENCIES = @LIBOBJS@
am_hxunxmlns_OBJECTS = hxunxmlns.$(OBJEXT) html.$(OBJEXT) \
	scan.$(OBJEXT) openurl.$(OBJEXT) url.$(OBJEXT) \
	connectsock.$(OBJEXT) heap.$(OBJEXT) errexit.$(OBJEXT) \
	types.$(OBJEXT) headers.$(OBJEXT) dict.$(OBJEXT) \
	fopencookie.$(OBJEXT)
hxunxmlns_OBJECTS = $(am_hxunxmlns_OBJECTS)
hxunxmlns_LDADD = $(LDADD)
hxunxmlns_DEPENDENCIES = @LIBOBJS@
am_hxwls_OBJECTS = hxwls.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) connectsock.$(OBJEXT) \
	heap.$(OBJEXT) errexit.$(OBJEXT) types.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT) \
	unent.$(OBJEXT)
hxwls_OBJECTS = $(am_hxwls_OBJECTS)
hxwls_LDADD = $(LDADD)
hxwls_DEPENDENCIES = @LIBOBJS@
am_hxxmlns_OBJECTS = hxxmlns.$(OBJEXT) html.$(OBJEXT) scan.$(OBJEXT) \
	openurl.$(OBJEXT) url.$(OBJEXT) connectsock.$(OBJEXT) \
	heap.$(OBJEXT) errexit.$(OBJEXT) types.$(OBJEXT) \
	headers.$(OBJEXT) dict.$(OBJEXT) fopencookie.$(OBJEXT)
hxxmlns_OBJECTS = $(am_hxxmlns_OBJECTS)
hxxmlns_LDADD = $(LDADD)
hxxmlns_DEPENDENCIES = @LIBOBJS@
am_xml2asc_OBJECTS = xml2asc.$(OBJEXT)
xml2asc_OBJECTS = $(am_xml2asc_OBJECTS)
xml2asc_LDADD = $(LDADD)
xml2asc_DEPENDENCIES = @LIBOBJS@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = $(DEPDIR)/malloc.Po $(DEPDIR)/realloc.Po \
	$(DEPDIR)/strdup.Po $(DEPDIR)/strerror.Po $(DEPDIR)/strstr.Po \
	$(DEPDIR)/tfind.Po $(DEPDIR)/tsearch.Po $(DEPDIR)/twalk.Po \
	./$(DEPDIR)/asc2xml.Po ./$(DEPDIR)/cexport.Po \
	./$(DEPDIR)/class.Po ./$(DEPDIR)/connectsock.Po \
	./$(DEPDIR)/dict.Po ./$(DEPDIR)/dtd.Po ./$(DEPDIR)/errexit.Po \
	./$(DEPDIR)/fopencookie.Po ./$(DEPDIR)/genid.Po \
	./$(DEPDIR)/hash.Po ./$(DEPDIR)/headers.Po ./$(DEPDIR)/heap.Po \
	./$(DEPDIR)/html.Po ./$(DEPDIR)/hxaddid.Po \
	./$(DEPDIR)/hxcite.Po ./$(DEPDIR)/hxclean.Po \
	./$(DEPDIR)/hxcopy.Po ./$(DEPDIR)/hxcount.Po \
	./$(DEPDIR)/hxextract.Po ./$(DEPDIR)/hxincl.Po \
	./$(DEPDIR)/hxindex.Po ./$(DEPDIR)/hxmkbib.Po \
	./$(DEPDIR)/hxmultitoc.Po ./$(DEPDIR)/hxname2id.Po \
	./$(DEPDIR)/hxnormalize.Po ./$(DEPDIR)/hxnsxml.Po \
	./$(DEPDIR)/hxnum.Po ./$(DEPDIR)/hxpipe.Po \
	./$(DEPDIR)/hxprintlinks.Po ./$(DEPDIR)/hxprune.Po \
	./$(DEPDIR)/hxref.Po ./$(DEPDIR)/hxremove.Po \
	./$(DEPDIR)/hxselect.Po ./$(DEPDIR)/hxtabletrans.Po \
	./$(DEPDIR)/hxtoc.Po ./$(DEPDIR)/hxuncdata.Po \
	./$(DEPDIR)/hxunentmain.Po ./$(DEPDIR)/hxunpipe.Po \
	./$(DEPDIR)/hxunxmlns.Po ./$(DEPDIR)/hxwls.Po \
	./$(DEPDIR)/hxxmlns.Po ./$(DEPDIR)/langinfo.Po \
	./$(DEPDIR)/openurl.Po ./$(DEPDIR)/scan.Po \
	./$(DEPDIR)/selector.Po ./$(DEPDIR)/selmatch.Po \
	./$(DEPDIR)/textwrap.Po ./$(DEPDIR)/tree.Po \
	./$(DEPDIR)/types.Po ./$(DEPDIR)/unent.Po ./$(DEPDIR)/url.Po \
	./$(DEPDIR)/xml2asc.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_@AM_V@)
am__v_LEX_ = $(am__v_LEX_@AM_DEFAULT_V@)
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_@AM_V@)
am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(asc2xml_SOURCES) $(cexport_SOURCES) $(hxaddid_SOURCES) \
	$(hxcite_SOURCES) $(hxclean_SOURCES) $(hxcopy_SOURCES) \
	$(hxcount_SOURCES) $(hxextract_SOURCES) $(hxincl_SOURCES) \
	$(hxindex_SOURCES) $(hxmkbib_SOURCES) $(hxmultitoc_SOURCES) \
	$(hxname2id_SOURCES) $(hxnormalize_SOURCES) $(hxnsxml_SOURCES) \
	$(hxnum_SOURCES) $(hxpipe_SOURCES) $(hxprintlinks_SOURCES) \
	$(hxprune_SOURCES) $(hxref_SOURCES) $(hxremove_SOURCES) \
	$(hxselect_SOURCES) $(hxtabletrans_SOURCES) $(hxtoc_SOURCES) \
	$(hxuncdata_SOURCES) $(hxunent_SOURCES) $(hxunpipe_SOURCES) \
	$(hxunxmlns_SOURCES) $(hxwls_SOURCES) $(hxxmlns_SOURCES) \
	$(xml2asc_SOURCES)
DIST_SOURCES = $(asc2xml_SOURCES) $(cexport_SOURCES) \
	$(hxaddid_SOURCES) $(hxcite_SOURCES) $(hxclean_SOURCES) \
	$(hxcopy_SOURCES) $(hxcount_SOURCES) $(hxextract_SOURCES) \
	$(hxincl_SOURCES) $(hxindex_SOURCES) $(hxmkbib_SOURCES) \
	$(hxmultitoc_SOURCES) $(hxname2id_SOURCES) \
	$(hxnormalize_SOURCES) $(hxnsxml_SOURCES) $(hxnum_SOURCES) \
	$(hxpipe_SOURCES) $(hxprintlinks_SOURCES) $(hxprune_SOURCES) \
	$(hxref_SOURCES) $(hxremove_SOURCES) $(hxselect_SOURCES) \
	$(hxtabletrans_SOURCES) $(hxtoc_SOURCES) $(hxuncdata_SOURCES) \
	$(hxunent_SOURCES) $(hxunpipe_SOURCES) $(hxunxmlns_SOURCES) \
	$(hxwls_SOURCES) $(hxxmlns_SOURCES) $(xml2asc_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
DATA = $(doc_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	ABOUT-NLS AUTHORS COPYING ChangeLog INSTALL NEWS README TODO \
	compile config.guess config.rpath config.sub depcomp html.c \
	html.h install-sh malloc.c missing realloc.c scan.c strdup.c \
	strerror.c strstr.c test-driver tfind.c tsearch.c twalk.c \
	ylwrap
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCURL = @LIBCURL@
LIBCURL_CPPFLAGS = @LIBCURL_CPPFLAGS@
LIBICONV = @LIBICONV@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
_libcurl_config = @_libcurl_config@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
lex_opt_flags = @lex_opt_flags@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
bin_SCRIPTS = hxcite-mkbib
man_MANS = hxaddid.1 asc2xml.1 hxcite.1\
			hxcite-mkbib.1 hxcopy.1\
			hxcount.1 hxextract.1 hxclean.1\
			hxprune.1 hxincl.1 hxindex.1 hxmkbib.1 hxmultitoc.1\
			hxname2id.1 hxnormalize.1 hxnum.1 hxpipe.1\
			hxprintlinks.1 hxremove.1 hxtabletrans.1\
			hxtoc.1 hxuncdata.1 hxunent.1\
			hxunpipe.1 hxunxmlns.1 hxwls.1 xml2asc.1 hxxmlns.1\
			hxref.1 hxselect.1 hxnsxml.1

EXTRA_DIST = config.rpath\
			$(man_MANS) dtd.hash unent.hash export.h fopencookie.h\
			$(bin_SCRIPTS) $(BUILT_SOURCES) cexport.1\
			$(TESTS)

doc_DATA = COPYING
LDADD = @LIBOBJS@ @LIBCURL@ @LIBICONV@
AM_CPPFLAGS = @LIBCURL_CPPFLAGS@
AM_YFLAGS = -d
AM_LFLAGS = @lex_opt_flags@
ACLOCAL_AMFLAGS = -I m4
EXPORTS = dict.e heap.e types.e headers.e connectsock.e\
			dtd.e errexit.e tree.e genid.e html.e url.e\
			openurl.e scan.e textwrap.e unent.e class.e\
			selector.e hash.e selmatch.e langinfo.e

BUILT_SOURCES = $(EXPORTS) scan.c html.c html.h dtd.c unent.c
asc2xml_SOURCES = asc2xml.c
hxaddid_SOURCES = hxaddid.c html.y scan.l dtd.c openurl.c errexit.c\
			url.c connectsock.c heap.c tree.c types.c genid.c\
			fopencookie.h\
			class.c hash.c headers.c dict.c fopencookie.c

cexport_SOURCES = cexport.c
hxcite_SOURCES = heap.c errexit.c hxcite.c
hxcount_SOURCES = hxcount.c html.y scan.l types.c errexit.c heap.c\
			openurl.c url.c connectsock.c headers.c dict.c\
			fopencookie.h fopencookie.c

hxextract_SOURCES = hxextract.c html.y scan.l openurl.c url.c\
			connectsock.c heap.c errexit.c class.c headers.c\
			dict.c types.c fopencookie.h fopencookie.c

hxclean_SOURCES = hxclean.c html.y tree.c types.c heap.c dtd.c\
			scan.l errexit.c

hxprune_SOURCES = hxprune.c tree.c scan.l html.y errexit.c dtd.c\
			heap.c types.c openurl.c url.c connectsock.c class.c\
			headers.c dict.c fopencookie.h fopencookie.c

hxincl_SOURCES = hxincl.c scan.l html.y openurl.c url.c heap.c\
			errexit.c connectsock.c types.c headers.c dict.c\
			fopencookie.h fopencookie.c

hxindex_SOURCES = hxindex.c scan.l html.y openurl.c url.c heap.c class.c\
			errexit.c connectsock.c types.c tree.c genid.c dtd.c\
			headers.c dict.c fopencookie.h fopencookie.c

hxmkbib_SOURCES = errexit.c heap.c hxmkbib.c hash.c
hxmultitoc_SOURCES = hxmultitoc.c html.y scan.l openurl.c url.c\
			connectsock.c heap.c errexit.c class.c headers.c\
			dict.c types.c fopencookie.h fopencookie.c

hxnormalize_SOURCES = hxnormalize.c html.y scan.l openurl.c url.c\
			tree.c connectsock.c heap.c dtd.c types.c\
			fopencookie.h langinfo.c\
			textwrap.c errexit.c headers.c dict.c fopencookie.c

hxnum_SOURCES = hxnum.c html.y scan.l openurl.c url.c errexit.c\
			heap.c connectsock.c headers.c dict.c types.c class.c\
			fopencookie.h fopencookie.c

hxpipe_SOURCES = hxpipe.c html.y scan.l types.c errexit.c heap.c\
			openurl.c url.c connectsock.c headers.c dict.c\
			fopencookie.h fopencookie.c

hxremove_SOURCES = hxremove.c types.c errexit.c heap.c html.y scan.l\
			tree.c selector.c dtd.c selmatch.c

hxselect_SOURCES = hxselect.c types.c errexit.c heap.c html.y scan.l\
			tree.c selector.c dtd.c selmatch.c

hxtabletrans_SOURCES = hxtabletrans.c scan.l tree.c heap.c openurl.c html.y\
			errexit.c dtd.c types.c dict.c connectsock.c\
			headers.c url.c fopencookie.h fopencookie.c

hxtoc_SOURCES = html.y scan.l dtd.c openurl.c errexit.c url.c class.c\
			connectsock.c heap.c tree.c types.c genid.c hxtoc.c\
			hash.c headers.c dict.c fopencookie.h fopencookie.c

hxuncdata_SOURCES = hxuncdata.c
hxunent_SOURCES = unent.c hxunentmain.c
hxunpipe_SOURCES = hxunpipe.c heap.c errexit.c openurl.c url.c\
			fopencookie.h\
			connectsock.c headers.c dict.c types.c fopencookie.c

hxunxmlns_SOURCES = hxunxmlns.c html.y scan.l openurl.c url.c\
			connectsock.c heap.c errexit.c types.c headers.c\
			dict.c fopencookie.h fopencookie.c

hxwls_SOURCES = hxwls.c html.y scan.l openurl.c url.c\
			connectsock.c heap.c errexit.c types.c headers.c\
			dict.c fopencookie.h fopencookie.c unent.c

hxxmlns_SOURCES = hxxmlns.c html.y scan.l openurl.c url.c\
			connectsock.c heap.c errexit.c types.c headers.c\
			dict.c fopencookie.h fopencookie.c

xml2asc_SOURCES = xml2asc.c
hxref_SOURCES = html.y scan.l dtd.c openurl.c errexit.c url.c\
			connectsock.c heap.c tree.c types.c genid.c hxref.c\
			hash.c headers.c dict.c fopencookie.h fopencookie.c

hxname2id_SOURCES = html.y scan.l dtd.c openurl.c errexit.c url.c\
			connectsock.c heap.c tree.c types.c hxname2id.c\
			headers.c dict.c fopencookie.h fopencookie.c

hxcopy_SOURCES = html.y scan.l types.c url.c openurl.c errexit.c\
			dict.c headers.c heap.c connectsock.c hxcopy.c\
			fopencookie.h fopencookie.c

hxnsxml_SOURCES = hxnsxml.c html.y scan.l types.c errexit.c heap.c\
			openurl.c url.c connectsock.c headers.c dict.c\
			fopencookie.h fopencookie.c

hxprintlinks_SOURCES = hxprintlinks.c openurl.c headers.c\
			types.c heap.c errexit.c\
			dict.c html.y scan.l url.c connectsock.c\
			fopencookie.h fopencookie.c

HTML_MANS = $(man_MANS:.1=.html)
CLEANFILES = $(HTML_MANS)
SUFFIX = .c:sC .l:sC .y:sC .e:h .h:h
SUFFIXES = .1 .e .html

# This is inconvenient. In automake version 1.11, $(wildcard) worked,
# but not in version 1.14. :-(
# TESTS = $(wildcard $(top_srcdir)/tests/*.sh)
TESTS = tests/addid1.sh tests/addid1.sh tests/ascxml.sh\
	tests/cdata1.sh tests/cite1.sh tests/cite2.sh tests/cite3.sh\
	tests/cite4.sh\
	tests/clean1.sh tests/copy1.sh tests/copy2.sh tests/copy3.sh\
	tests/copy4.sh tests/copy5.sh tests/copy6.sh\
	tests/copy7.sh tests/copy8.sh tests/extract1.sh\
	tests/hxnsxml1.sh tests/hxnsxml2.sh tests/hxnsxml3.sh\
	tests/hxnsxml4.sh tests/incl1.sh tests/incl10.sh\
	tests/incl11.sh tests/incl2.sh tests/incl3.sh tests/incl4.sh\
	tests/incl5.sh tests/incl6.sh tests/incl7.sh tests/incl8.sh\
	tests/incl9.sh tests/index.sh tests/index2.sh tests/index3.sh\
	tests/index4.sh tests/index5.sh\
	tests/index6.sh tests/index7.sh tests/index8.sh tests/index9.sh\
	tests/index10.sh\
	tests/mkbib1.sh tests/mkbib2.sh\
	tests/normalize1.sh tests/normalize2.sh\
	tests/normalize3.sh tests/normalize4.sh tests/normalize5.sh\
	tests/normalize6.sh tests/normalize7.sh tests/normalize8.sh\
	tests/normalize9.sh tests/normalize10.sh tests/normalize11.sh\
	tests/normalize12.sh tests/normalize13.sh tests/normalize14.sh\
	tests/num1.sh tests/num2.sh tests/num3.sh tests/num4.sh\
	tests/num5.sh tests/num6.sh\
	tests/pipe1.sh tests/pipe2.sh tests/pipe3.sh tests/pipe4.sh\
	tests/printlinks1.sh tests/printlinks2.sh tests/printlinks3.sh\
	tests/printlinks4.sh tests/ref1.sh\
	tests/ref2.sh tests/ref3.sh tests/relurl1.sh tests/relurl2.sh\
	tests/relurl3.sh tests/remove1.sh tests/remove2.sh\
	tests/remove3.sh tests/remove4.sh tests/remove5.sh tests/remove6.sh\
	tests/remove7.sh\
	tests/select01.sh tests/select02.sh tests/select03.sh\
	tests/select04.sh tests/select05.sh tests/select06.sh\
	tests/select07.sh tests/select08.sh tests/select09.sh\
	tests/select10.sh tests/select11.sh tests/select12.sh\
	tests/select13.sh tests/select14.sh tests/select15.sh\
	tests/select16.sh tests/select17.sh tests/select18.sh\
	tests/select19.sh tests/select20.sh tests/select21.sh\
	tests/select22.sh tests/select23.sh tests/select24.sh\
	tests/select25.sh\
	tests/tabletrans1.sh tests/tabletrans2.sh tests/tabletrans3.sh\
	tests/tabletrans4.sh tests/tabletrans5.sh\
	tests/toc1.sh tests/toc2.sh tests/toc3.sh tests/toc4.sh\
	tests/toc5.sh tests/toc6.sh\
	tests/uncdata1.sh\
	tests/unent1.sh tests/unent2.sh tests/unent3.sh tests/unent4.sh\
	tests/unent5.sh tests/unent6.sh\
	tests/unpipe1.sh\
	tests/unpipe2.sh tests/unpipe3.sh tests/unpipe4.sh tests/unpipe5.sh\
	tests/unpipe6.sh\
	tests/wls1.sh tests/wls2.sh\
	tests/wls3.sh tests/wls4.sh tests/wls5.sh tests/wls6.sh\
	tests/xmlasc1.sh tests/xmlasc2.sh tests/xmlasc3.sh\
	tests/xmlasc4.sh tests/xmlasc5.sh tests/xmlasc6.sh\
	tests/xmlasc7.sh tests/xmlns1.sh tests/xref1.sh tests/xref2.sh\
	tests/xref3.sh tests/xref4.sh tests/xref5.sh tests/xref6.sh\
	tests/xref7.sh

all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .1 .e .html .c .l .log .o .obj .test .test$(EXEEXT) .trs .y
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

asc2xml$(EXEEXT): $(asc2xml_OBJECTS) $(asc2xml_DEPENDENCIES) $(EXTRA_asc2xml_DEPENDENCIES) 
	@rm -f asc2xml$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(asc2xml_OBJECTS) $(asc2xml_LDADD) $(LIBS)

cexport$(EXEEXT): $(cexport_OBJECTS) $(cexport_DEPENDENCIES) $(EXTRA_cexport_DEPENDENCIES) 
	@rm -f cexport$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cexport_OBJECTS) $(cexport_LDADD) $(LIBS)
html.h: html.c
	@if test ! -f $@; then rm -f html.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) html.c; else :; fi

hxaddid$(EXEEXT): $(hxaddid_OBJECTS) $(hxaddid_DEPENDENCIES) $(EXTRA_hxaddid_DEPENDENCIES) 
	@rm -f hxaddid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxaddid_OBJECTS) $(hxaddid_LDADD) $(LIBS)

hxcite$(EXEEXT): $(hxcite_OBJECTS) $(hxcite_DEPENDENCIES) $(EXTRA_hxcite_DEPENDENCIES) 
	@rm -f hxcite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxcite_OBJECTS) $(hxcite_LDADD) $(LIBS)

hxclean$(EXEEXT): $(hxclean_OBJECTS) $(hxclean_DEPENDENCIES) $(EXTRA_hxclean_DEPENDENCIES) 
	@rm -f hxclean$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxclean_OBJECTS) $(hxclean_LDADD) $(LIBS)

hxcopy$(EXEEXT): $(hxcopy_OBJECTS) $(hxcopy_DEPENDENCIES) $(EXTRA_hxcopy_DEPENDENCIES) 
	@rm -f hxcopy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxcopy_OBJECTS) $(hxcopy_LDADD) $(LIBS)

hxcount$(EXEEXT): $(hxcount_OBJECTS) $(hxcount_DEPENDENCIES) $(EXTRA_hxcount_DEPENDENCIES) 
	@rm -f hxcount$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxcount_OBJECTS) $(hxcount_LDADD) $(LIBS)

hxextract$(EXEEXT): $(hxextract_OBJECTS) $(hxextract_DEPENDENCIES) $(EXTRA_hxextract_DEPENDENCIES) 
	@rm -f hxextract$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxextract_OBJECTS) $(hxextract_LDADD) $(LIBS)

hxincl$(EXEEXT): $(hxincl_OBJECTS) $(hxincl_DEPENDENCIES) $(EXTRA_hxincl_DEPENDENCIES) 
	@rm -f hxincl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxincl_OBJECTS) $(hxincl_LDADD) $(LIBS)

hxindex$(EXEEXT): $(hxindex_OBJECTS) $(hxindex_DEPENDENCIES) $(EXTRA_hxindex_DEPENDENCIES) 
	@rm -f hxindex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxindex_OBJECTS) $(hxindex_LDADD) $(LIBS)

hxmkbib$(EXEEXT): $(hxmkbib_OBJECTS) $(hxmkbib_DEPENDENCIES) $(EXTRA_hxmkbib_DEPENDENCIES) 
	@rm -f hxmkbib$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxmkbib_OBJECTS) $(hxmkbib_LDADD) $(LIBS)

hxmultitoc$(EXEEXT): $(hxmultitoc_OBJECTS) $(hxmultitoc_DEPENDENCIES) $(EXTRA_hxmultitoc_DEPENDENCIES) 
	@rm -f hxmultitoc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxmultitoc_OBJECTS) $(hxmultitoc_LDADD) $(LIBS)

hxname2id$(EXEEXT): $(hxname2id_OBJECTS) $(hxname2id_DEPENDENCIES) $(EXTRA_hxname2id_DEPENDENCIES) 
	@rm -f hxname2id$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxname2id_OBJECTS) $(hxname2id_LDADD) $(LIBS)

hxnormalize$(EXEEXT): $(hxnormalize_OBJECTS) $(hxnormalize_DEPENDENCIES) $(EXTRA_hxnormalize_DEPENDENCIES) 
	@rm -f hxnormalize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxnormalize_OBJECTS) $(hxnormalize_LDADD) $(LIBS)

hxnsxml$(EXEEXT): $(hxnsxml_OBJECTS) $(hxnsxml_DEPENDENCIES) $(EXTRA_hxnsxml_DEPENDENCIES) 
	@rm -f hxnsxml$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxnsxml_OBJECTS) $(hxnsxml_LDADD) $(LIBS)

hxnum$(EXEEXT): $(hxnum_OBJECTS) $(hxnum_DEPENDENCIES) $(EXTRA_hxnum_DEPENDENCIES) 
	@rm -f hxnum$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxnum_OBJECTS) $(hxnum_LDADD) $(LIBS)

hxpipe$(EXEEXT): $(hxpipe_OBJECTS) $(hxpipe_DEPENDENCIES) $(EXTRA_hxpipe_DEPENDENCIES) 
	@rm -f hxpipe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxpipe_OBJECTS) $(hxpipe_LDADD) $(LIBS)

hxprintlinks$(EXEEXT): $(hxprintlinks_OBJECTS) $(hxprintlinks_DEPENDENCIES) $(EXTRA_hxprintlinks_DEPENDENCIES) 
	@rm -f hxprintlinks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxprintlinks_OBJECTS) $(hxprintlinks_LDADD) $(LIBS)

hxprune$(EXEEXT): $(hxprune_OBJECTS) $(hxprune_DEPENDENCIES) $(EXTRA_hxprune_DEPENDENCIES) 
	@rm -f hxprune$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxprune_OBJECTS) $(hxprune_LDADD) $(LIBS)

hxref$(EXEEXT): $(hxref_OBJECTS) $(hxref_DEPENDENCIES) $(EXTRA_hxref_DEPENDENCIES) 
	@rm -f hxref$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxref_OBJECTS) $(hxref_LDADD) $(LIBS)

hxremove$(EXEEXT): $(hxremove_OBJECTS) $(hxremove_DEPENDENCIES) $(EXTRA_hxremove_DEPENDENCIES) 
	@rm -f hxremove$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxremove_OBJECTS) $(hxremove_LDADD) $(LIBS)

hxselect$(EXEEXT): $(hxselect_OBJECTS) $(hxselect_DEPENDENCIES) $(EXTRA_hxselect_DEPENDENCIES) 
	@rm -f hxselect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxselect_OBJECTS) $(hxselect_LDADD) $(LIBS)

hxtabletrans$(EXEEXT): $(hxtabletrans_OBJECTS) $(hxtabletrans_DEPENDENCIES) $(EXTRA_hxtabletrans_DEPENDENCIES) 
	@rm -f hxtabletrans$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxtabletrans_OBJECTS) $(hxtabletrans_LDADD) $(LIBS)

hxtoc$(EXEEXT): $(hxtoc_OBJECTS) $(hxtoc_DEPENDENCIES) $(EXTRA_hxtoc_DEPENDENCIES) 
	@rm -f hxtoc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxtoc_OBJECTS) $(hxtoc_LDADD) $(LIBS)

hxuncdata$(EXEEXT): $(hxuncdata_OBJECTS) $(hxuncdata_DEPENDENCIES) $(EXTRA_hxuncdata_DEPENDENCIES) 
	@rm -f hxuncdata$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxuncdata_OBJECTS) $(hxuncdata_LDADD) $(LIBS)

hxunent$(EXEEXT): $(hxunent_OBJECTS) $(hxunent_DEPENDENCIES) $(EXTRA_hxunent_DEPENDENCIES) 
	@rm -f hxunent$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxunent_OBJECTS) $(hxunent_LDADD) $(LIBS)

hxunpipe$(EXEEXT): $(hxunpipe_OBJECTS) $(hxunpipe_DEPENDENCIES) $(EXTRA_hxunpipe_DEPENDENCIES) 
	@rm -f hxunpipe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxunpipe_OBJECTS) $(hxunpipe_LDADD) $(LIBS)

hxunxmlns$(EXEEXT): $(hxunxmlns_OBJECTS) $(hxunxmlns_DEPENDENCIES) $(EXTRA_hxunxmlns_DEPENDENCIES) 
	@rm -f hxunxmlns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxunxmlns_OBJECTS) $(hxunxmlns_LDADD) $(LIBS)

hxwls$(EXEEXT): $(hxwls_OBJECTS) $(hxwls_DEPENDENCIES) $(EXTRA_hxwls_DEPENDENCIES) 
	@rm -f hxwls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxwls_OBJECTS) $(hxwls_LDADD) $(LIBS)

hxxmlns$(EXEEXT): $(hxxmlns_OBJECTS) $(hxxmlns_DEPENDENCIES) $(EXTRA_hxxmlns_DEPENDENCIES) 
	@rm -f hxxmlns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hxxmlns_OBJECTS) $(hxxmlns_LDADD) $(LIBS)

xml2asc$(EXEEXT): $(xml2asc_OBJECTS) $(xml2asc_DEPENDENCIES) $(EXTRA_xml2asc_DEPENDENCIES) 
	@rm -f xml2asc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xml2asc_OBJECTS) $(xml2asc_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/malloc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/realloc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/strdup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/strerror.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/strstr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/tfind.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/tsearch.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/twalk.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asc2xml.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cexport.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/class.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connectsock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dict.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dtd.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errexit.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fopencookie.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/genid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/headers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/html.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxaddid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxcite.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxclean.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxcopy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxcount.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxextract.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxincl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxindex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxmkbib.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxmultitoc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxname2id.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxnormalize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxnsxml.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxnum.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxpipe.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxprintlinks.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxprune.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxref.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxremove.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxselect.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxtabletrans.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxtoc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxuncdata.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxunentmain.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxunpipe.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxunxmlns.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxwls.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hxxmlns.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/langinfo.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openurl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scan.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selector.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selmatch.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textwrap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tree.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/types.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unent.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/url.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xml2asc.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)
install-man1: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/addid1.sh.log: tests/addid1.sh
	@p='tests/addid1.sh'; \
	b='tests/addid1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ascxml.sh.log: tests/ascxml.sh
	@p='tests/ascxml.sh'; \
	b='tests/ascxml.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/cdata1.sh.log: tests/cdata1.sh
	@p='tests/cdata1.sh'; \
	b='tests/cdata1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/cite1.sh.log: tests/cite1.sh
	@p='tests/cite1.sh'; \
	b='tests/cite1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/cite2.sh.log: tests/cite2.sh
	@p='tests/cite2.sh'; \
	b='tests/cite2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/cite3.sh.log: tests/cite3.sh
	@p='tests/cite3.sh'; \
	b='tests/cite3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/cite4.sh.log: tests/cite4.sh
	@p='tests/cite4.sh'; \
	b='tests/cite4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/clean1.sh.log: tests/clean1.sh
	@p='tests/clean1.sh'; \
	b='tests/clean1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy1.sh.log: tests/copy1.sh
	@p='tests/copy1.sh'; \
	b='tests/copy1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy2.sh.log: tests/copy2.sh
	@p='tests/copy2.sh'; \
	b='tests/copy2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy3.sh.log: tests/copy3.sh
	@p='tests/copy3.sh'; \
	b='tests/copy3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy4.sh.log: tests/copy4.sh
	@p='tests/copy4.sh'; \
	b='tests/copy4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy5.sh.log: tests/copy5.sh
	@p='tests/copy5.sh'; \
	b='tests/copy5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy6.sh.log: tests/copy6.sh
	@p='tests/copy6.sh'; \
	b='tests/copy6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy7.sh.log: tests/copy7.sh
	@p='tests/copy7.sh'; \
	b='tests/copy7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/copy8.sh.log: tests/copy8.sh
	@p='tests/copy8.sh'; \
	b='tests/copy8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/extract1.sh.log: tests/extract1.sh
	@p='tests/extract1.sh'; \
	b='tests/extract1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/hxnsxml1.sh.log: tests/hxnsxml1.sh
	@p='tests/hxnsxml1.sh'; \
	b='tests/hxnsxml1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/hxnsxml2.sh.log: tests/hxnsxml2.sh
	@p='tests/hxnsxml2.sh'; \
	b='tests/hxnsxml2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/hxnsxml3.sh.log: tests/hxnsxml3.sh
	@p='tests/hxnsxml3.sh'; \
	b='tests/hxnsxml3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/hxnsxml4.sh.log: tests/hxnsxml4.sh
	@p='tests/hxnsxml4.sh'; \
	b='tests/hxnsxml4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl1.sh.log: tests/incl1.sh
	@p='tests/incl1.sh'; \
	b='tests/incl1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl10.sh.log: tests/incl10.sh
	@p='tests/incl10.sh'; \
	b='tests/incl10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl11.sh.log: tests/incl11.sh
	@p='tests/incl11.sh'; \
	b='tests/incl11.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl2.sh.log: tests/incl2.sh
	@p='tests/incl2.sh'; \
	b='tests/incl2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl3.sh.log: tests/incl3.sh
	@p='tests/incl3.sh'; \
	b='tests/incl3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl4.sh.log: tests/incl4.sh
	@p='tests/incl4.sh'; \
	b='tests/incl4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl5.sh.log: tests/incl5.sh
	@p='tests/incl5.sh'; \
	b='tests/incl5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl6.sh.log: tests/incl6.sh
	@p='tests/incl6.sh'; \
	b='tests/incl6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl7.sh.log: tests/incl7.sh
	@p='tests/incl7.sh'; \
	b='tests/incl7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl8.sh.log: tests/incl8.sh
	@p='tests/incl8.sh'; \
	b='tests/incl8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/incl9.sh.log: tests/incl9.sh
	@p='tests/incl9.sh'; \
	b='tests/incl9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index.sh.log: tests/index.sh
	@p='tests/index.sh'; \
	b='tests/index.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index2.sh.log: tests/index2.sh
	@p='tests/index2.sh'; \
	b='tests/index2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index3.sh.log: tests/index3.sh
	@p='tests/index3.sh'; \
	b='tests/index3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index4.sh.log: tests/index4.sh
	@p='tests/index4.sh'; \
	b='tests/index4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index5.sh.log: tests/index5.sh
	@p='tests/index5.sh'; \
	b='tests/index5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index6.sh.log: tests/index6.sh
	@p='tests/index6.sh'; \
	b='tests/index6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index7.sh.log: tests/index7.sh
	@p='tests/index7.sh'; \
	b='tests/index7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index8.sh.log: tests/index8.sh
	@p='tests/index8.sh'; \
	b='tests/index8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index9.sh.log: tests/index9.sh
	@p='tests/index9.sh'; \
	b='tests/index9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/index10.sh.log: tests/index10.sh
	@p='tests/index10.sh'; \
	b='tests/index10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/mkbib1.sh.log: tests/mkbib1.sh
	@p='tests/mkbib1.sh'; \
	b='tests/mkbib1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/mkbib2.sh.log: tests/mkbib2.sh
	@p='tests/mkbib2.sh'; \
	b='tests/mkbib2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize1.sh.log: tests/normalize1.sh
	@p='tests/normalize1.sh'; \
	b='tests/normalize1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize2.sh.log: tests/normalize2.sh
	@p='tests/normalize2.sh'; \
	b='tests/normalize2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize3.sh.log: tests/normalize3.sh
	@p='tests/normalize3.sh'; \
	b='tests/normalize3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize4.sh.log: tests/normalize4.sh
	@p='tests/normalize4.sh'; \
	b='tests/normalize4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize5.sh.log: tests/normalize5.sh
	@p='tests/normalize5.sh'; \
	b='tests/normalize5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize6.sh.log: tests/normalize6.sh
	@p='tests/normalize6.sh'; \
	b='tests/normalize6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize7.sh.log: tests/normalize7.sh
	@p='tests/normalize7.sh'; \
	b='tests/normalize7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize8.sh.log: tests/normalize8.sh
	@p='tests/normalize8.sh'; \
	b='tests/normalize8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize9.sh.log: tests/normalize9.sh
	@p='tests/normalize9.sh'; \
	b='tests/normalize9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize10.sh.log: tests/normalize10.sh
	@p='tests/normalize10.sh'; \
	b='tests/normalize10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize11.sh.log: tests/normalize11.sh
	@p='tests/normalize11.sh'; \
	b='tests/normalize11.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize12.sh.log: tests/normalize12.sh
	@p='tests/normalize12.sh'; \
	b='tests/normalize12.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize13.sh.log: tests/normalize13.sh
	@p='tests/normalize13.sh'; \
	b='tests/normalize13.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/normalize14.sh.log: tests/normalize14.sh
	@p='tests/normalize14.sh'; \
	b='tests/normalize14.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/num1.sh.log: tests/num1.sh
	@p='tests/num1.sh'; \
	b='tests/num1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/num2.sh.log: tests/num2.sh
	@p='tests/num2.sh'; \
	b='tests/num2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/num3.sh.log: tests/num3.sh
	@p='tests/num3.sh'; \
	b='tests/num3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/num4.sh.log: tests/num4.sh
	@p='tests/num4.sh'; \
	b='tests/num4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/num5.sh.log: tests/num5.sh
	@p='tests/num5.sh'; \
	b='tests/num5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/num6.sh.log: tests/num6.sh
	@p='tests/num6.sh'; \
	b='tests/num6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pipe1.sh.log: tests/pipe1.sh
	@p='tests/pipe1.sh'; \
	b='tests/pipe1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pipe2.sh.log: tests/pipe2.sh
	@p='tests/pipe2.sh'; \
	b='tests/pipe2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pipe3.sh.log: tests/pipe3.sh
	@p='tests/pipe3.sh'; \
	b='tests/pipe3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pipe4.sh.log: tests/pipe4.sh
	@p='tests/pipe4.sh'; \
	b='tests/pipe4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/printlinks1.sh.log: tests/printlinks1.sh
	@p='tests/printlinks1.sh'; \
	b='tests/printlinks1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/printlinks2.sh.log: tests/printlinks2.sh
	@p='tests/printlinks2.sh'; \
	b='tests/printlinks2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/printlinks3.sh.log: tests/printlinks3.sh
	@p='tests/printlinks3.sh'; \
	b='tests/printlinks3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/printlinks4.sh.log: tests/printlinks4.sh
	@p='tests/printlinks4.sh'; \
	b='tests/printlinks4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ref1.sh.log: tests/ref1.sh
	@p='tests/ref1.sh'; \
	b='tests/ref1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ref2.sh.log: tests/ref2.sh
	@p='tests/ref2.sh'; \
	b='tests/ref2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ref3.sh.log: tests/ref3.sh
	@p='tests/ref3.sh'; \
	b='tests/ref3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/relurl1.sh.log: tests/relurl1.sh
	@p='tests/relurl1.sh'; \
	b='tests/relurl1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/relurl2.sh.log: tests/relurl2.sh
	@p='tests/relurl2.sh'; \
	b='tests/relurl2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/relurl3.sh.log: tests/relurl3.sh
	@p='tests/relurl3.sh'; \
	b='tests/relurl3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove1.sh.log: tests/remove1.sh
	@p='tests/remove1.sh'; \
	b='tests/remove1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove2.sh.log: tests/remove2.sh
	@p='tests/remove2.sh'; \
	b='tests/remove2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove3.sh.log: tests/remove3.sh
	@p='tests/remove3.sh'; \
	b='tests/remove3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove4.sh.log: tests/remove4.sh
	@p='tests/remove4.sh'; \
	b='tests/remove4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove5.sh.log: tests/remove5.sh
	@p='tests/remove5.sh'; \
	b='tests/remove5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove6.sh.log: tests/remove6.sh
	@p='tests/remove6.sh'; \
	b='tests/remove6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/remove7.sh.log: tests/remove7.sh
	@p='tests/remove7.sh'; \
	b='tests/remove7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select01.sh.log: tests/select01.sh
	@p='tests/select01.sh'; \
	b='tests/select01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select02.sh.log: tests/select02.sh
	@p='tests/select02.sh'; \
	b='tests/select02.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select03.sh.log: tests/select03.sh
	@p='tests/select03.sh'; \
	b='tests/select03.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select04.sh.log: tests/select04.sh
	@p='tests/select04.sh'; \
	b='tests/select04.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select05.sh.log: tests/select05.sh
	@p='tests/select05.sh'; \
	b='tests/select05.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select06.sh.log: tests/select06.sh
	@p='tests/select06.sh'; \
	b='tests/select06.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select07.sh.log: tests/select07.sh
	@p='tests/select07.sh'; \
	b='tests/select07.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select08.sh.log: tests/select08.sh
	@p='tests/select08.sh'; \
	b='tests/select08.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select09.sh.log: tests/select09.sh
	@p='tests/select09.sh'; \
	b='tests/select09.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select10.sh.log: tests/select10.sh
	@p='tests/select10.sh'; \
	b='tests/select10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select11.sh.log: tests/select11.sh
	@p='tests/select11.sh'; \
	b='tests/select11.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select12.sh.log: tests/select12.sh
	@p='tests/select12.sh'; \
	b='tests/select12.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select13.sh.log: tests/select13.sh
	@p='tests/select13.sh'; \
	b='tests/select13.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select14.sh.log: tests/select14.sh
	@p='tests/select14.sh'; \
	b='tests/select14.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select15.sh.log: tests/select15.sh
	@p='tests/select15.sh'; \
	b='tests/select15.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select16.sh.log: tests/select16.sh
	@p='tests/select16.sh'; \
	b='tests/select16.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select17.sh.log: tests/select17.sh
	@p='tests/select17.sh'; \
	b='tests/select17.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select18.sh.log: tests/select18.sh
	@p='tests/select18.sh'; \
	b='tests/select18.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select19.sh.log: tests/select19.sh
	@p='tests/select19.sh'; \
	b='tests/select19.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select20.sh.log: tests/select20.sh
	@p='tests/select20.sh'; \
	b='tests/select20.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select21.sh.log: tests/select21.sh
	@p='tests/select21.sh'; \
	b='tests/select21.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select22.sh.log: tests/select22.sh
	@p='tests/select22.sh'; \
	b='tests/select22.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select23.sh.log: tests/select23.sh
	@p='tests/select23.sh'; \
	b='tests/select23.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select24.sh.log: tests/select24.sh
	@p='tests/select24.sh'; \
	b='tests/select24.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/select25.sh.log: tests/select25.sh
	@p='tests/select25.sh'; \
	b='tests/select25.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tabletrans1.sh.log: tests/tabletrans1.sh
	@p='tests/tabletrans1.sh'; \
	b='tests/tabletrans1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tabletrans2.sh.log: tests/tabletrans2.sh
	@p='tests/tabletrans2.sh'; \
	b='tests/tabletrans2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tabletrans3.sh.log: tests/tabletrans3.sh
	@p='tests/tabletrans3.sh'; \
	b='tests/tabletrans3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tabletrans4.sh.log: tests/tabletrans4.sh
	@p='tests/tabletrans4.sh'; \
	b='tests/tabletrans4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tabletrans5.sh.log: tests/tabletrans5.sh
	@p='tests/tabletrans5.sh'; \
	b='tests/tabletrans5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/toc1.sh.log: tests/toc1.sh
	@p='tests/toc1.sh'; \
	b='tests/toc1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/toc2.sh.log: tests/toc2.sh
	@p='tests/toc2.sh'; \
	b='tests/toc2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/toc3.sh.log: tests/toc3.sh
	@p='tests/toc3.sh'; \
	b='tests/toc3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/toc4.sh.log: tests/toc4.sh
	@p='tests/toc4.sh'; \
	b='tests/toc4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/toc5.sh.log: tests/toc5.sh
	@p='tests/toc5.sh'; \
	b='tests/toc5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/toc6.sh.log: tests/toc6.sh
	@p='tests/toc6.sh'; \
	b='tests/toc6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/uncdata1.sh.log: tests/uncdata1.sh
	@p='tests/uncdata1.sh'; \
	b='tests/uncdata1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unent1.sh.log: tests/unent1.sh
	@p='tests/unent1.sh'; \
	b='tests/unent1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unent2.sh.log: tests/unent2.sh
	@p='tests/unent2.sh'; \
	b='tests/unent2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unent3.sh.log: tests/unent3.sh
	@p='tests/unent3.sh'; \
	b='tests/unent3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unent4.sh.log: tests/unent4.sh
	@p='tests/unent4.sh'; \
	b='tests/unent4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unent5.sh.log: tests/unent5.sh
	@p='tests/unent5.sh'; \
	b='tests/unent5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unent6.sh.log: tests/unent6.sh
	@p='tests/unent6.sh'; \
	b='tests/unent6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unpipe1.sh.log: tests/unpipe1.sh
	@p='tests/unpipe1.sh'; \
	b='tests/unpipe1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unpipe2.sh.log: tests/unpipe2.sh
	@p='tests/unpipe2.sh'; \
	b='tests/unpipe2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unpipe3.sh.log: tests/unpipe3.sh
	@p='tests/unpipe3.sh'; \
	b='tests/unpipe3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unpipe4.sh.log: tests/unpipe4.sh
	@p='tests/unpipe4.sh'; \
	b='tests/unpipe4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unpipe5.sh.log: tests/unpipe5.sh
	@p='tests/unpipe5.sh'; \
	b='tests/unpipe5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/unpipe6.sh.log: tests/unpipe6.sh
	@p='tests/unpipe6.sh'; \
	b='tests/unpipe6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/wls1.sh.log: tests/wls1.sh
	@p='tests/wls1.sh'; \
	b='tests/wls1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/wls2.sh.log: tests/wls2.sh
	@p='tests/wls2.sh'; \
	b='tests/wls2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/wls3.sh.log: tests/wls3.sh
	@p='tests/wls3.sh'; \
	b='tests/wls3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/wls4.sh.log: tests/wls4.sh
	@p='tests/wls4.sh'; \
	b='tests/wls4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/wls5.sh.log: tests/wls5.sh
	@p='tests/wls5.sh'; \
	b='tests/wls5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/wls6.sh.log: tests/wls6.sh
	@p='tests/wls6.sh'; \
	b='tests/wls6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc1.sh.log: tests/xmlasc1.sh
	@p='tests/xmlasc1.sh'; \
	b='tests/xmlasc1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc2.sh.log: tests/xmlasc2.sh
	@p='tests/xmlasc2.sh'; \
	b='tests/xmlasc2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc3.sh.log: tests/xmlasc3.sh
	@p='tests/xmlasc3.sh'; \
	b='tests/xmlasc3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc4.sh.log: tests/xmlasc4.sh
	@p='tests/xmlasc4.sh'; \
	b='tests/xmlasc4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc5.sh.log: tests/xmlasc5.sh
	@p='tests/xmlasc5.sh'; \
	b='tests/xmlasc5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc6.sh.log: tests/xmlasc6.sh
	@p='tests/xmlasc6.sh'; \
	b='tests/xmlasc6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlasc7.sh.log: tests/xmlasc7.sh
	@p='tests/xmlasc7.sh'; \
	b='tests/xmlasc7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xmlns1.sh.log: tests/xmlns1.sh
	@p='tests/xmlns1.sh'; \
	b='tests/xmlns1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref1.sh.log: tests/xref1.sh
	@p='tests/xref1.sh'; \
	b='tests/xref1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref2.sh.log: tests/xref2.sh
	@p='tests/xref2.sh'; \
	b='tests/xref2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref3.sh.log: tests/xref3.sh
	@p='tests/xref3.sh'; \
	b='tests/xref3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref4.sh.log: tests/xref4.sh
	@p='tests/xref4.sh'; \
	b='tests/xref4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref5.sh.log: tests/xref5.sh
	@p='tests/xref5.sh'; \
	b='tests/xref5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref6.sh.log: tests/xref6.sh
	@p='tests/xref6.sh'; \
	b='tests/xref6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/xref7.sh.log: tests/xref7.sh
	@p='tests/xref7.sh'; \
	b='tests/xref7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f html.c
	-rm -f html.h
	-rm -f scan.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f $(DEPDIR)/malloc.Po
	-rm -f $(DEPDIR)/realloc.Po
	-rm -f $(DEPDIR)/strdup.Po
	-rm -f $(DEPDIR)/strerror.Po
	-rm -f $(DEPDIR)/strstr.Po
	-rm -f $(DEPDIR)/tfind.Po
	-rm -f $(DEPDIR)/tsearch.Po
	-rm -f $(DEPDIR)/twalk.Po
	-rm -f ./$(DEPDIR)/asc2xml.Po
	-rm -f ./$(DEPDIR)/cexport.Po
	-rm -f ./$(DEPDIR)/class.Po
	-rm -f ./$(DEPDIR)/connectsock.Po
	-rm -f ./$(DEPDIR)/dict.Po
	-rm -f ./$(DEPDIR)/dtd.Po
	-rm -f ./$(DEPDIR)/errexit.Po
	-rm -f ./$(DEPDIR)/fopencookie.Po
	-rm -f ./$(DEPDIR)/genid.Po
	-rm -f ./$(DEPDIR)/hash.Po
	-rm -f ./$(DEPDIR)/headers.Po
	-rm -f ./$(DEPDIR)/heap.Po
	-rm -f ./$(DEPDIR)/html.Po
	-rm -f ./$(DEPDIR)/hxaddid.Po
	-rm -f ./$(DEPDIR)/hxcite.Po
	-rm -f ./$(DEPDIR)/hxclean.Po
	-rm -f ./$(DEPDIR)/hxcopy.Po
	-rm -f ./$(DEPDIR)/hxcount.Po
	-rm -f ./$(DEPDIR)/hxextract.Po
	-rm -f ./$(DEPDIR)/hxincl.Po
	-rm -f ./$(DEPDIR)/hxindex.Po
	-rm -f ./$(DEPDIR)/hxmkbib.Po
	-rm -f ./$(DEPDIR)/hxmultitoc.Po
	-rm -f ./$(DEPDIR)/hxname2id.Po
	-rm -f ./$(DEPDIR)/hxnormalize.Po
	-rm -f ./$(DEPDIR)/hxnsxml.Po
	-rm -f ./$(DEPDIR)/hxnum.Po
	-rm -f ./$(DEPDIR)/hxpipe.Po
	-rm -f ./$(DEPDIR)/hxprintlinks.Po
	-rm -f ./$(DEPDIR)/hxprune.Po
	-rm -f ./$(DEPDIR)/hxref.Po
	-rm -f ./$(DEPDIR)/hxremove.Po
	-rm -f ./$(DEPDIR)/hxselect.Po
	-rm -f ./$(DEPDIR)/hxtabletrans.Po
	-rm -f ./$(DEPDIR)/hxtoc.Po
	-rm -f ./$(DEPDIR)/hxuncdata.Po
	-rm -f ./$(DEPDIR)/hxunentmain.Po
	-rm -f ./$(DEPDIR)/hxunpipe.Po
	-rm -f ./$(DEPDIR)/hxunxmlns.Po
	-rm -f ./$(DEPDIR)/hxwls.Po
	-rm -f ./$(DEPDIR)/hxxmlns.Po
	-rm -f ./$(DEPDIR)/langinfo.Po
	-rm -f ./$(DEPDIR)/openurl.Po
	-rm -f ./$(DEPDIR)/scan.Po
	-rm -f ./$(DEPDIR)/selector.Po
	-rm -f ./$(DEPDIR)/selmatch.Po
	-rm -f ./$(DEPDIR)/textwrap.Po
	-rm -f ./$(DEPDIR)/tree.Po
	-rm -f ./$(DEPDIR)/types.Po
	-rm -f ./$(DEPDIR)/unent.Po
	-rm -f ./$(DEPDIR)/url.Po
	-rm -f ./$(DEPDIR)/xml2asc.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-docDATA install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f $(DEPDIR)/malloc.Po
	-rm -f $(DEPDIR)/realloc.Po
	-rm -f $(DEPDIR)/strdup.Po
	-rm -f $(DEPDIR)/strerror.Po
	-rm -f $(DEPDIR)/strstr.Po
	-rm -f $(DEPDIR)/tfind.Po
	-rm -f $(DEPDIR)/tsearch.Po
	-rm -f $(DEPDIR)/twalk.Po
	-rm -f ./$(DEPDIR)/asc2xml.Po
	-rm -f ./$(DEPDIR)/cexport.Po
	-rm -f ./$(DEPDIR)/class.Po
	-rm -f ./$(DEPDIR)/connectsock.Po
	-rm -f ./$(DEPDIR)/dict.Po
	-rm -f ./$(DEPDIR)/dtd.Po
	-rm -f ./$(DEPDIR)/errexit.Po
	-rm -f ./$(DEPDIR)/fopencookie.Po
	-rm -f ./$(DEPDIR)/genid.Po
	-rm -f ./$(DEPDIR)/hash.Po
	-rm -f ./$(DEPDIR)/headers.Po
	-rm -f ./$(DEPDIR)/heap.Po
	-rm -f ./$(DEPDIR)/html.Po
	-rm -f ./$(DEPDIR)/hxaddid.Po
	-rm -f ./$(DEPDIR)/hxcite.Po
	-rm -f ./$(DEPDIR)/hxclean.Po
	-rm -f ./$(DEPDIR)/hxcopy.Po
	-rm -f ./$(DEPDIR)/hxcount.Po
	-rm -f ./$(DEPDIR)/hxextract.Po
	-rm -f ./$(DEPDIR)/hxincl.Po
	-rm -f ./$(DEPDIR)/hxindex.Po
	-rm -f ./$(DEPDIR)/hxmkbib.Po
	-rm -f ./$(DEPDIR)/hxmultitoc.Po
	-rm -f ./$(DEPDIR)/hxname2id.Po
	-rm -f ./$(DEPDIR)/hxnormalize.Po
	-rm -f ./$(DEPDIR)/hxnsxml.Po
	-rm -f ./$(DEPDIR)/hxnum.Po
	-rm -f ./$(DEPDIR)/hxpipe.Po
	-rm -f ./$(DEPDIR)/hxprintlinks.Po
	-rm -f ./$(DEPDIR)/hxprune.Po
	-rm -f ./$(DEPDIR)/hxref.Po
	-rm -f ./$(DEPDIR)/hxremove.Po
	-rm -f ./$(DEPDIR)/hxselect.Po
	-rm -f ./$(DEPDIR)/hxtabletrans.Po
	-rm -f ./$(DEPDIR)/hxtoc.Po
	-rm -f ./$(DEPDIR)/hxuncdata.Po
	-rm -f ./$(DEPDIR)/hxunentmain.Po
	-rm -f ./$(DEPDIR)/hxunpipe.Po
	-rm -f ./$(DEPDIR)/hxunxmlns.Po
	-rm -f ./$(DEPDIR)/hxwls.Po
	-rm -f ./$(DEPDIR)/hxxmlns.Po
	-rm -f ./$(DEPDIR)/langinfo.Po
	-rm -f ./$(DEPDIR)/openurl.Po
	-rm -f ./$(DEPDIR)/scan.Po
	-rm -f ./$(DEPDIR)/selector.Po
	-rm -f ./$(DEPDIR)/selmatch.Po
	-rm -f ./$(DEPDIR)/textwrap.Po
	-rm -f ./$(DEPDIR)/tree.Po
	-rm -f ./$(DEPDIR)/types.Po
	-rm -f ./$(DEPDIR)/unent.Po
	-rm -f ./$(DEPDIR)/url.Po
	-rm -f ./$(DEPDIR)/xml2asc.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-docDATA uninstall-man

uninstall-man: uninstall-man1

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-TESTS check-am clean clean-binPROGRAMS clean-cscope \
	clean-generic clean-noinstPROGRAMS cscope cscopelist-am ctags \
	ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-docDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-man1 \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS uninstall-docDATA \
	uninstall-man uninstall-man1

.PRECIOUS: Makefile


$(EXPORTS): $(cexport_SOURCES)

.c.e:
	$(MAKE) cexport
	$(top_builddir)/cexport -I. -I$(srcdir) $(CPPFLAGS) -c "@CPP@" <$< >$@

.1.html:
	groff -mandoc -Txhtml $< >$@
#	man2html -r $< | sed -e '1,/^$$/d' >$@

dtd.c: dtd.hash
	gperf -a -c -C -o -t -p -T -k '1,2,$$' -N lookup_element $< >$@

unent.c: unent.hash
	gperf -a -c -C -o -t -p -k '1,2,$$' -D -N lookup_entity $< >$@

scan.o: html.h html.e scan.c

sel.tab.c sel.tab.h: sel.y
	bison -p sel_ -d -v sel.y

Overview.html: $(HTML_MANS)
	echo "<title>Manual pages</title><ul>" >$@
	for f in $(HTML_MANS); do\
	 echo "<li><a href=\""$$f"\">"`basename $$f .html`"</a>";\
	done | sort >>$@
	echo "</ul>" >>$@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
